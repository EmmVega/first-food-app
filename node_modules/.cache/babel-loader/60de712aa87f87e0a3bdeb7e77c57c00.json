{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carli\\\\Desktop\\\\DEV\\\\ReactJS\\\\MAX\\\\foodApp\\\\starter\\\\src\\\\store\\\\ContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/React.createContext({// items: [],\n  // totalAmount: 0,\n  // addItem: (item) => {},\n  // removeItem: (id) => {}\n});\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === state.items.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ContextProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = ContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/carli/Desktop/DEV/ReactJS/MAX/foodApp/starter/src/store/ContextProvider.jsx"],"names":["React","useReducer","CartContext","createContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","ContextProvider","children","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB,CACrC;AACA;AACA;AACA;AAJqC,CAApB,CAApB;AAOA,MAAMC,gBAAgB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACvB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEG,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC1BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYT,KAAK,CAACH,KAAN,CAAYY,EADP,CAA9B;AAGA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AACA,QAAII,YAAJ;;AAEA,QAAGD,gBAAH,EAAoB;AACjB,YAAME,WAAW,GAAG,EACjB,GAAGF,gBADc;AAEjBJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAF7B,OAApB;AAIAK,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACF,KAPD,MAOO;AACJD,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACF;;AAED,WAAO;AACJP,MAAAA,KAAK,EAAEc,YADH;AAEJb,MAAAA,WAAW,EAAEK;AAFT,KAAP;AAIF;;AACJ,SAAOP,gBAAP;AACF,CA3BD;;AA6BA,OAAO,MAAMkB,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE5C,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAACM,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMsB,oBAAoB,GAAGd,IAAI,IAAI;AAClCa,IAAAA,kBAAkB,CAAC;AAChBf,MAAAA,IAAI,EAAE,KADU;AAEhBE,MAAAA,IAAI,EAAEA;AAFU,KAAD,CAAlB;AAIF,GALD;;AAMA,QAAMe,yBAAyB,GAAGV,EAAE,IAAI;AACrCQ,IAAAA,kBAAkB,CAAC;AAChBf,MAAAA,IAAI,EAAE,QADU;AAEhBO,MAAAA,EAAE,EAAEA;AAFY,KAAD,CAAlB;AAIF,GALD;;AAOA,QAAMW,WAAW,GAAG;AACjBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADA;AAEjBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFN;AAGjBuB,IAAAA,OAAO,EAAEH,oBAHQ;AAIjBI,IAAAA,UAAU,EAAEH;AAJK,GAApB;AAOC,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACIL;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKH,CA7BM;;GAAMD,e;;KAAAA,e;AA+Bb,eAAepB,WAAf","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nconst CartContext = React.createContext({\r\n   // items: [],\r\n   // totalAmount: 0,\r\n   // addItem: (item) => {},\r\n   // removeItem: (id) => {}\r\n})\r\n\r\nconst defaultCartState = {\r\n   items: [],\r\n   totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n   if (action.type === 'ADD'){\r\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n            \r\n         const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === state.items.id\r\n         );\r\n         const existingCartItem = state.items[existingCartItemIndex];\r\n         let updatedItems;\r\n\r\n         if(existingCartItem){\r\n            const updatedItem = {\r\n               ...existingCartItem,\r\n               amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n         } else {\r\n            updatedItems = state.items.concat(action.item)\r\n         }\r\n\r\n         return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n         }\r\n      }\r\n   return defaultCartState; \r\n};\r\n\r\nexport const ContextProvider = ({children}) => {\r\n\r\n   const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n   \r\n   const addItemToCartHandler = item => {\r\n      dispatchCartAction({\r\n         type: 'ADD',\r\n         item: item\r\n      });\r\n   };\r\n   const removeItemFromCartHandler = id => {\r\n      dispatchCartAction({\r\n         type: 'REMOVE',\r\n         id: id\r\n      })\r\n   };\r\n\r\n   const cartContext = {\r\n      items: cartState.items,\r\n      totalAmount: cartState.totalAmount,\r\n      addItem: addItemToCartHandler,\r\n      removeItem: removeItemFromCartHandler\r\n   };\r\n\r\n    return (\r\n       <CartContext.Provider value={cartContext}>\r\n          {children}\r\n       </CartContext.Provider>\r\n    );\r\n}\r\n\r\nexport default CartContext;"]},"metadata":{},"sourceType":"module"}