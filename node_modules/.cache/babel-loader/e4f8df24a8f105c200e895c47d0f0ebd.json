{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carli\\\\Desktop\\\\DEV\\\\ReactJS\\\\MAX\\\\foodApp\\\\starter\\\\src\\\\store\\\\ContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: item => {},\n  removeItem: id => {}\n});\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ContextProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = ContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/carli/Desktop/DEV/ReactJS/MAX/foodApp/starter/src/store/ContextProvider.jsx"],"names":["React","useReducer","CartContext","createContext","items","totalAmount","addItem","item","removeItem","id","defaultCartState","cartReducer","state","action","type","updatedItems","concat","updatedTotalAmount","price","amount","ContextProvider","children","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACrCC,EAAAA,KAAK,EAAE,EAD8B;AAErCC,EAAAA,WAAW,EAAE,CAFwB;AAGrCC,EAAAA,OAAO,EAAGC,IAAD,IAAU,CAAE,CAHgB;AAIrCC,EAAAA,UAAU,EAAGC,EAAD,IAAQ,CAAE;AAJe,CAApB,CAApB;AAQA,MAAMC,gBAAgB,GAAG;AACtBN,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAzB;;AAKA,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACpB,UAAMC,YAAY,GAAGH,KAAK,CAACR,KAAN,CAAYY,MAAZ,CAAmBH,MAAM,CAACN,IAA1B,CAArB;AACA,UAAMU,kBAAkB,GAAGL,KAAK,CAACP,WAAN,GAAoBQ,MAAM,CAACN,IAAP,CAAYW,KAAZ,GAAoBL,MAAM,CAACN,IAAP,CAAYY,MAA/E;AACA,WAAO;AACJf,MAAAA,KAAK,EAAEW,YADH;AAEJV,MAAAA,WAAW,EAAEY;AAFT,KAAP;AAIF;;AACJ,SAAOP,gBAAP;AACF,CAVD;;AAYA,OAAO,MAAMU,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE5C,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACU,WAAD,EAAcD,gBAAd,CAAlD;;AAEA,QAAMc,oBAAoB,GAAGjB,IAAI,IAAI;AAClCgB,IAAAA,kBAAkB,CAAC;AAChBT,MAAAA,IAAI,EAAE,KADU;AAEhBP,MAAAA,IAAI,EAAEA;AAFU,KAAD,CAAlB;AAIF,GALD;;AAMA,QAAMkB,yBAAyB,GAAGhB,EAAE,IAAI;AACrCc,IAAAA,kBAAkB,CAAC;AAChBT,MAAAA,IAAI,EAAE,QADU;AAEhBL,MAAAA,EAAE,EAAEA;AAFY,KAAD,CAAlB;AAIF,GALD;;AAOA,QAAMiB,WAAW,GAAG;AACjBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADA;AAEjBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFN;AAGjBC,IAAAA,OAAO,EAAEkB,oBAHQ;AAIjBhB,IAAAA,UAAU,EAAEiB;AAJK,GAApB;AAOC,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACIL;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKH,CA7BM;;GAAMD,e;;KAAAA,e;AA+Bb,eAAelB,WAAf","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nconst CartContext = React.createContext({\r\n   items: [],\r\n   totalAmount: 0,\r\n   addItem: (item) => {},\r\n   removeItem: (id) => {}\r\n\r\n})\r\n\r\nconst defaultCartState = {\r\n   items: [],\r\n   totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n   if (action.type === 'ADD'){\r\n         const updatedItems = state.items.concat(action.item);\r\n         const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n         return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n         }\r\n      }\r\n   return defaultCartState; \r\n};\r\n\r\nexport const ContextProvider = ({children}) => {\r\n\r\n   const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n   \r\n   const addItemToCartHandler = item => {\r\n      dispatchCartAction({\r\n         type: 'ADD',\r\n         item: item\r\n      });\r\n   };\r\n   const removeItemFromCartHandler = id => {\r\n      dispatchCartAction({\r\n         type: 'REMOVE',\r\n         id: id\r\n      })\r\n   };\r\n\r\n   const cartContext = {\r\n      items: cartState.items,\r\n      totalAmount: cartState.totalAmount,\r\n      addItem: addItemToCartHandler,\r\n      removeItem: removeItemFromCartHandler\r\n   };\r\n\r\n    return (\r\n       <CartContext.Provider value={cartContext}>\r\n          {children}\r\n       </CartContext.Provider>\r\n    );\r\n}\r\n\r\nexport default CartContext;"]},"metadata":{},"sourceType":"module"}